Search.setIndex({"docnames": ["index", "modules", "prototrade", "prototrade.exceptions", "prototrade.exchange", "prototrade.file_manager", "prototrade.models", "prototrade.position_management", "prototrade.test_strategies", "prototrade.ticker_streamer"], "filenames": ["index.rst", "modules.rst", "prototrade.rst", "prototrade.exceptions.rst", "prototrade.exchange.rst", "prototrade.file_manager.rst", "prototrade.models.rst", "prototrade.position_management.rst", "prototrade.test_strategies.rst", "prototrade.ticker_streamer.rst"], "titles": ["Welcome to Prototrade\u2019s documentation!", "prototrade", "prototrade package", "prototrade.exceptions package", "prototrade.exchange package", "prototrade.file_manager package", "prototrade.models package", "prototrade.position_management package", "prototrade.test_strategies package", "prototrade.ticker_streamer package"], "terms": {"index": 0, "modul": [0, 1], "search": 0, "page": 0, "autofunct": [], "proto": [], "packag": [0, 1], "subpackag": 1, "except": [1, 2, 6], "submodul": 1, "error_processor": [1, 2], "content": 1, "exchang": [0, 1, 2, 8], "file_manag": [1, 2], "model": [1, 2], "book": [1, 2], "dual_heap": [1, 2], "error_ev": [1, 2], "order": [1, 2], "strategi": [1, 2], "subscription_ev": [1, 2], "transact": [1, 2], "position_manag": [1, 2], "test_pul": [1, 2], "test_strategi": [1, 2], "test_strategy_1": [1, 2], "ticker_stream": [1, 2], "alpaca_stream": [1, 2], "price_updat": [1, 2], "subscription_manag": [1, 2], "virtual_exchang": 1, "custommanag": [1, 2], "historicalapi": [1, 2], "historicalapiproxi": [1, 2], "virtualexchang": [1, 2], "create_compon": [1, 2], "create_shared_rest_api_class": [1, 2], "register_strategi": [1, 2], "run_strategi": [1, 2], "stop": [1, 2, 9], "handle_error": [1, 2, 7], "errorprocessor": [2, 3], "join_thread": [2, 3], "stop_queue_pol": [2, 3, 9], "exchangenotopenexcept": [2, 3], "extraneousparameterexcept": [2, 3], "invalidordersideexcept": [2, 3], "invalidordertypeexcept": [2, 3], "invalidpriceexcept": [2, 3], "invalidvolumeexcept": [2, 3], "missingparameterexcept": [2, 3], "subscriptionexcept": [2, 3], "unavailablesymbolexcept": [2, 3], "unknownorderidexcept": [2, 3], "cancel_ord": [2, 4, 7], "create_ord": [2, 4, 7], "get_ord": [2, 4, 7], "get_pnl": [2, 4, 7], "get_pnl_over_tim": [2, 4, 7], "get_posit": [2, 4, 7], "get_positions_over_tim": [2, 4, 7], "get_strategy_best_ask": [2, 4, 7], "get_strategy_best_bid": [2, 4, 7], "get_subscribed_book": [2, 4], "get_subscript": [2, 4], "get_transact": [2, 4, 7], "is_run": [2, 4], "position_manager_decor": [2, 4], "print_heap": [2, 4], "subscrib": [2, 4, 6, 9], "unsubscrib": [2, 4, 6, 9], "filemanag": [2, 5], "create_directory_for_run": [2, 5], "get_run_index": [2, 5], "halfquot": [2, 6], "price": [2, 6, 7], "side_str": [2, 6], "volum": [2, 6, 7], "quot": [2, 6, 9], "ask": [2, 6], "bid": [2, 6], "timestamp": [2, 6], "dualheap": [2, 6], "errorev": [2, 6], "subscribetyp": [2, 6], "subscriptionev": [2, 6], "positionmanag": [2, 7], "execute_any_ask_ord": [2, 7], "execute_any_bid_ord": [2, 7], "get_realised_pnl": [2, 7], "hack_out": [2, 7], "release_lock": [2, 7], "testpul": [2, 7], "main": [2, 8], "alpacadatastream": [2, 9], "get_rest_api": [2, 9], "is_market_open": [2, 9], "priceupdat": [2, 9], "update_pric": [2, 9], "subscriptionmanag": [2, 9], "print_books_subscribed_to": [2, 9], "class": [0, 2, 3, 4, 5, 6, 7, 9], "address": 2, "none": [2, 7], "authkei": 2, "serial": 2, "pickl": 2, "ctx": 2, "base": [2, 3, 4, 5, 6, 7, 9], "basemanag": 2, "api": 2, "object": [2, 3, 4, 5, 6, 7, 9], "token": 2, "manag": 2, "expos": 2, "incref": 2, "true": 2, "manager_own": 2, "fals": 2, "namespaceproxi": 2, "streamer_nam": 2, "streamer_usernam": 2, "streamer_kei": 2, "exchange_nam": [2, 9], "iex": 2, "save_data_loc": [2, 4, 7], "strategy_func": [2, 6], "arg": [2, 4, 6], "should_exit": 2, "error_queu": [2, 3, 4, 7], "exchange_num": [2, 4, 7], "func": 2, "sentinel": [3, 9], "order_books_dict": [4, 7, 9], "order_books_dict_semaphor": [4, 7, 9], "subscription_queu": [4, 9], "stop_ev": [4, 7, 9], "shared_rest_api": 4, "symbol": [4, 6, 7, 9], "root_path": 5, "num_strategi": [5, 9], "properti": 6, "bid_volum": 6, "bid_pric": 6, "ask_volum": 6, "ask_pric": 6, "process_num": 6, "order_id": [6, 7], "order_sid": [6, 7], "order_typ": [6, 7], "valu": 6, "enum": 6, "an": 6, "enumer": 6, "1": 6, "2": 6, "event_typ": 6, "strategy_num": [6, 7, 9], "subscribed_symbol": 7, "volume_request": 7, "ask_heap": 7, "live_best_bid_half_quot": 7, "bid_heap": 7, "live_best_ask_half_quot": 7, "symbol_filt": 7, "test_symbol": 7, "lower_volum": 8, "upper_volum": 8, "api_kei": 9, "secret_kei": 9, "streamer": 9, "To": 0, "inspect": 0, "function": 0, "check": [], "automodul": [], "get": 0, "start": 0, "section": [], "avail": 0, "test": 0, "return": 2, "list": 2, "random": 2, "ingredi": 2, "string": 2, "paramet": 2, "kind": 2, "str": 2, "option": 2, "rais": 2, "lumach": 2, "invalidkinderror": 2, "If": 2, "i": 2, "invalid": 2, "The": 2, "type": 2, "testsett": 2, "lsdjfl": 2, "df": 2}, "objects": {"": [[2, 0, 0, "-", "prototrade"]], "prototrade": [[3, 0, 0, "-", "exceptions"], [4, 0, 0, "-", "exchange"], [5, 0, 0, "-", "file_manager"], [6, 0, 0, "-", "models"], [7, 0, 0, "-", "position_management"], [8, 0, 0, "-", "test_strategies"], [9, 0, 0, "-", "ticker_streamer"], [2, 0, 0, "-", "virtual_exchange"]], "prototrade.exceptions": [[3, 0, 0, "-", "error_processor"], [3, 0, 0, "-", "exceptions"]], "prototrade.exceptions.error_processor": [[3, 1, 1, "", "ErrorProcessor"]], "prototrade.exceptions.error_processor.ErrorProcessor": [[3, 2, 1, "", "join_thread"], [3, 2, 1, "", "stop_queue_polling"]], "prototrade.exceptions.exceptions": [[3, 3, 1, "", "ExchangeNotOpenException"], [3, 3, 1, "", "ExtraneousParameterException"], [3, 3, 1, "", "InvalidOrderSideException"], [3, 3, 1, "", "InvalidOrderTypeException"], [3, 3, 1, "", "InvalidPriceException"], [3, 3, 1, "", "InvalidVolumeException"], [3, 3, 1, "", "MissingParameterException"], [3, 3, 1, "", "SubscriptionException"], [3, 3, 1, "", "UnavailableSymbolException"], [3, 3, 1, "", "UnknownOrderIdException"]], "prototrade.exchange": [[4, 0, 0, "-", "exchange"]], "prototrade.exchange.exchange": [[4, 1, 1, "", "Exchange"]], "prototrade.exchange.exchange.Exchange": [[4, 2, 1, "", "cancel_order"], [4, 2, 1, "", "create_order"], [4, 2, 1, "", "get_orders"], [4, 2, 1, "", "get_pnl"], [4, 2, 1, "", "get_pnl_over_time"], [4, 2, 1, "", "get_positions"], [4, 2, 1, "", "get_positions_over_time"], [4, 2, 1, "", "get_strategy_best_ask"], [4, 2, 1, "", "get_strategy_best_bid"], [4, 2, 1, "", "get_subscribed_books"], [4, 2, 1, "", "get_subscriptions"], [4, 2, 1, "", "get_transactions"], [4, 2, 1, "", "is_running"], [4, 2, 1, "", "position_manager_decorator"], [4, 2, 1, "", "print_heap"], [4, 2, 1, "", "subscribe"], [4, 2, 1, "", "unsubscribe"]], "prototrade.file_manager": [[5, 0, 0, "-", "file_manager"]], "prototrade.file_manager.file_manager": [[5, 1, 1, "", "FileManager"]], "prototrade.file_manager.file_manager.FileManager": [[5, 2, 1, "", "create_directory_for_run"], [5, 2, 1, "", "get_run_index"]], "prototrade.models": [[6, 0, 0, "-", "books"], [6, 0, 0, "-", "dual_heap"], [6, 0, 0, "-", "error_event"], [6, 0, 0, "-", "order"], [6, 0, 0, "-", "strategy"], [6, 0, 0, "-", "subscription_event"], [6, 0, 0, "-", "transaction"]], "prototrade.models.books": [[6, 1, 1, "", "HalfQuote"], [6, 1, 1, "", "Quote"]], "prototrade.models.books.HalfQuote": [[6, 4, 1, "", "price"], [6, 4, 1, "", "side_str"], [6, 4, 1, "", "volume"]], "prototrade.models.books.Quote": [[6, 4, 1, "", "ask"], [6, 4, 1, "", "bid"], [6, 4, 1, "", "timestamp"]], "prototrade.models.dual_heap": [[6, 1, 1, "", "DualHeap"]], "prototrade.models.error_event": [[6, 1, 1, "", "ErrorEvent"]], "prototrade.models.order": [[6, 1, 1, "", "Order"]], "prototrade.models.strategy": [[6, 1, 1, "", "Strategy"]], "prototrade.models.subscription_event": [[6, 1, 1, "", "SubscribeType"], [6, 1, 1, "", "SubscriptionEvent"]], "prototrade.models.subscription_event.SubscribeType": [[6, 5, 1, "", "SUBSCRIBE"], [6, 5, 1, "", "UNSUBSCRIBE"]], "prototrade.models.transaction": [[6, 1, 1, "", "Transaction"]], "prototrade.position_management": [[7, 0, 0, "-", "position_manager"], [7, 0, 0, "-", "test_puller"]], "prototrade.position_management.position_manager": [[7, 1, 1, "", "PositionManager"], [7, 6, 1, "", "handle_error"]], "prototrade.position_management.position_manager.PositionManager": [[7, 2, 1, "", "cancel_order"], [7, 2, 1, "", "create_order"], [7, 2, 1, "", "execute_any_ask_orders"], [7, 2, 1, "", "execute_any_bid_orders"], [7, 2, 1, "", "get_orders"], [7, 2, 1, "", "get_pnl"], [7, 2, 1, "", "get_pnl_over_time"], [7, 2, 1, "", "get_positions"], [7, 2, 1, "", "get_positions_over_time"], [7, 2, 1, "", "get_realised_pnl"], [7, 2, 1, "", "get_strategy_best_ask"], [7, 2, 1, "", "get_strategy_best_bid"], [7, 2, 1, "", "get_transactions"], [7, 2, 1, "", "hack_out"], [7, 2, 1, "", "release_locks"]], "prototrade.position_management.test_puller": [[7, 1, 1, "", "TestPuller"]], "prototrade.position_management.test_puller.TestPuller": [[7, 2, 1, "", "test_pull"]], "prototrade.test_strategies": [[8, 0, 0, "-", "test_strategy_1"]], "prototrade.test_strategies.test_strategy_1": [[8, 6, 1, "", "main"], [8, 6, 1, "", "test_strategy"]], "prototrade.ticker_streamer": [[9, 0, 0, "-", "alpaca_streamer"], [9, 0, 0, "-", "price_updater"], [9, 0, 0, "-", "subscription_manager"]], "prototrade.ticker_streamer.alpaca_streamer": [[9, 1, 1, "", "AlpacaDataStreamer"]], "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer": [[9, 2, 1, "", "get_rest_api"], [9, 2, 1, "", "is_market_open"], [9, 2, 1, "", "stop"], [9, 2, 1, "", "subscribe"], [9, 2, 1, "", "unsubscribe"]], "prototrade.ticker_streamer.price_updater": [[9, 1, 1, "", "PriceUpdater"]], "prototrade.ticker_streamer.price_updater.PriceUpdater": [[9, 2, 1, "", "update_price"]], "prototrade.ticker_streamer.subscription_manager": [[9, 1, 1, "", "SubscriptionManager"]], "prototrade.ticker_streamer.subscription_manager.SubscriptionManager": [[9, 2, 1, "", "print_books_subscribed_to"], [9, 2, 1, "", "stop_queue_polling"], [9, 2, 1, "", "subscribe"], [9, 2, 1, "", "unsubscribe"]], "prototrade.virtual_exchange": [[2, 1, 1, "", "CustomManager"], [2, 1, 1, "", "HistoricalAPI"], [2, 1, 1, "", "HistoricalAPIProxy"], [2, 1, 1, "", "VirtualExchange"], [2, 6, 1, "", "handle_error"], [2, 6, 1, "", "run_strategy"]], "prototrade.virtual_exchange.VirtualExchange": [[2, 2, 1, "", "create_components"], [2, 2, 1, "", "create_shared_rest_api_class"], [2, 2, 1, "", "register_strategy"], [2, 2, 1, "", "run_strategies"], [2, 2, 1, "", "stop"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:exception", "4": "py:property", "5": "py:attribute", "6": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "exception", "Python exception"], "4": ["py", "property", "Python property"], "5": ["py", "attribute", "Python attribute"], "6": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "prototrad": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9], "": 0, "document": 0, "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8, 9], "subpackag": 2, "submodul": [2, 3, 4, 5, 6, 7, 8, 9], "virtual_exchang": 2, "modul": [2, 3, 4, 5, 6, 7, 8, 9], "content": [0, 2, 3, 4, 5, 6, 7, 8, 9], "except": 3, "error_processor": 3, "exchang": 4, "file_manag": 5, "model": 6, "book": 6, "dual_heap": 6, "error_ev": 6, "order": 6, "strategi": 6, "subscription_ev": 6, "transact": 6, "position_manag": 7, "test_pul": 7, "test_strategi": 8, "test_strategy_1": 8, "ticker_stream": 9, "alpaca_stream": 9, "price_updat": 9, "subscription_manag": 9}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to Prototrade\u2019s documentation!": [[0, "welcome-to-prototrade-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "prototrade": [[1, "prototrade"]], "prototrade package": [[2, "prototrade-package"]], "Subpackages": [[2, "subpackages"]], "Submodules": [[2, "submodules"], [3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"], [9, "submodules"]], "prototrade.virtual_exchange module": [[2, "module-prototrade.virtual_exchange"]], "Module contents": [[2, "module-prototrade"], [3, "module-prototrade.exceptions"], [4, "module-prototrade.exchange"], [5, "module-prototrade.file_manager"], [6, "module-prototrade.models"], [7, "module-prototrade.position_management"], [8, "module-prototrade.test_strategies"], [9, "module-prototrade.ticker_streamer"]], "prototrade.exceptions package": [[3, "prototrade-exceptions-package"]], "prototrade.exceptions.error_processor module": [[3, "module-prototrade.exceptions.error_processor"]], "prototrade.exceptions.exceptions module": [[3, "module-prototrade.exceptions.exceptions"]], "prototrade.exchange package": [[4, "prototrade-exchange-package"]], "prototrade.exchange.exchange module": [[4, "module-prototrade.exchange.exchange"]], "prototrade.file_manager package": [[5, "prototrade-file-manager-package"]], "prototrade.file_manager.file_manager module": [[5, "module-prototrade.file_manager.file_manager"]], "prototrade.models package": [[6, "prototrade-models-package"]], "prototrade.models.books module": [[6, "module-prototrade.models.books"]], "prototrade.models.dual_heap module": [[6, "module-prototrade.models.dual_heap"]], "prototrade.models.error_event module": [[6, "module-prototrade.models.error_event"]], "prototrade.models.order module": [[6, "module-prototrade.models.order"]], "prototrade.models.strategy module": [[6, "module-prototrade.models.strategy"]], "prototrade.models.subscription_event module": [[6, "module-prototrade.models.subscription_event"]], "prototrade.models.transaction module": [[6, "module-prototrade.models.transaction"]], "prototrade.position_management package": [[7, "prototrade-position-management-package"]], "prototrade.position_management.position_manager module": [[7, "module-prototrade.position_management.position_manager"]], "prototrade.position_management.test_puller module": [[7, "module-prototrade.position_management.test_puller"]], "prototrade.test_strategies package": [[8, "prototrade-test-strategies-package"]], "prototrade.test_strategies.test_strategy_1 module": [[8, "module-prototrade.test_strategies.test_strategy_1"]], "prototrade.ticker_streamer package": [[9, "prototrade-ticker-streamer-package"]], "prototrade.ticker_streamer.alpaca_streamer module": [[9, "module-prototrade.ticker_streamer.alpaca_streamer"]], "prototrade.ticker_streamer.price_updater module": [[9, "module-prototrade.ticker_streamer.price_updater"]], "prototrade.ticker_streamer.subscription_manager module": [[9, "module-prototrade.ticker_streamer.subscription_manager"]]}, "indexentries": {"custommanager (class in prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.CustomManager"]], "historicalapi (class in prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.HistoricalAPI"]], "historicalapiproxy (class in prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.HistoricalAPIProxy"]], "virtualexchange (class in prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.VirtualExchange"]], "create_components() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.create_components"]], "create_shared_rest_api_class() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.create_shared_rest_api_class"]], "handle_error() (in module prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.handle_error"]], "module": [[2, "module-prototrade"], [2, "module-prototrade.virtual_exchange"], [3, "module-prototrade.exceptions"], [3, "module-prototrade.exceptions.error_processor"], [3, "module-prototrade.exceptions.exceptions"], [4, "module-prototrade.exchange"], [4, "module-prototrade.exchange.exchange"], [5, "module-prototrade.file_manager"], [5, "module-prototrade.file_manager.file_manager"], [6, "module-prototrade.models"], [6, "module-prototrade.models.books"], [6, "module-prototrade.models.dual_heap"], [6, "module-prototrade.models.error_event"], [6, "module-prototrade.models.order"], [6, "module-prototrade.models.strategy"], [6, "module-prototrade.models.subscription_event"], [6, "module-prototrade.models.transaction"], [7, "module-prototrade.position_management"], [7, "module-prototrade.position_management.position_manager"], [7, "module-prototrade.position_management.test_puller"], [8, "module-prototrade.test_strategies"], [8, "module-prototrade.test_strategies.test_strategy_1"], [9, "module-prototrade.ticker_streamer"], [9, "module-prototrade.ticker_streamer.alpaca_streamer"], [9, "module-prototrade.ticker_streamer.price_updater"], [9, "module-prototrade.ticker_streamer.subscription_manager"]], "prototrade": [[2, "module-prototrade"]], "prototrade.virtual_exchange": [[2, "module-prototrade.virtual_exchange"]], "register_strategy() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.register_strategy"]], "run_strategies() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.run_strategies"]], "run_strategy() (in module prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.run_strategy"]], "stop() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.stop"]], "errorprocessor (class in prototrade.exceptions.error_processor)": [[3, "prototrade.exceptions.error_processor.ErrorProcessor"]], "exchangenotopenexception": [[3, "prototrade.exceptions.exceptions.ExchangeNotOpenException"]], "extraneousparameterexception": [[3, "prototrade.exceptions.exceptions.ExtraneousParameterException"]], "invalidordersideexception": [[3, "prototrade.exceptions.exceptions.InvalidOrderSideException"]], "invalidordertypeexception": [[3, "prototrade.exceptions.exceptions.InvalidOrderTypeException"]], "invalidpriceexception": [[3, "prototrade.exceptions.exceptions.InvalidPriceException"]], "invalidvolumeexception": [[3, "prototrade.exceptions.exceptions.InvalidVolumeException"]], "missingparameterexception": [[3, "prototrade.exceptions.exceptions.MissingParameterException"]], "subscriptionexception": [[3, "prototrade.exceptions.exceptions.SubscriptionException"]], "unavailablesymbolexception": [[3, "prototrade.exceptions.exceptions.UnavailableSymbolException"]], "unknownorderidexception": [[3, "prototrade.exceptions.exceptions.UnknownOrderIdException"]], "join_thread() (prototrade.exceptions.error_processor.errorprocessor method)": [[3, "prototrade.exceptions.error_processor.ErrorProcessor.join_thread"]], "prototrade.exceptions": [[3, "module-prototrade.exceptions"]], "prototrade.exceptions.error_processor": [[3, "module-prototrade.exceptions.error_processor"]], "prototrade.exceptions.exceptions": [[3, "module-prototrade.exceptions.exceptions"]], "stop_queue_polling() (prototrade.exceptions.error_processor.errorprocessor method)": [[3, "prototrade.exceptions.error_processor.ErrorProcessor.stop_queue_polling"]], "exchange (class in prototrade.exchange.exchange)": [[4, "prototrade.exchange.exchange.Exchange"]], "cancel_order() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.cancel_order"]], "create_order() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.create_order"]], "get_orders() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_orders"]], "get_pnl() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_pnl"]], "get_pnl_over_time() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_pnl_over_time"]], "get_positions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_positions"]], "get_positions_over_time() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_positions_over_time"]], "get_strategy_best_ask() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_strategy_best_ask"]], "get_strategy_best_bid() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_strategy_best_bid"]], "get_subscribed_books() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_subscribed_books"]], "get_subscriptions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_subscriptions"]], "get_transactions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_transactions"]], "is_running() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.is_running"]], "position_manager_decorator() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.position_manager_decorator"]], "print_heap() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.print_heap"]], "prototrade.exchange": [[4, "module-prototrade.exchange"]], "prototrade.exchange.exchange": [[4, "module-prototrade.exchange.exchange"]], "subscribe() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.subscribe"]], "unsubscribe() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.unsubscribe"]], "filemanager (class in prototrade.file_manager.file_manager)": [[5, "prototrade.file_manager.file_manager.FileManager"]], "create_directory_for_run() (prototrade.file_manager.file_manager.filemanager method)": [[5, "prototrade.file_manager.file_manager.FileManager.create_directory_for_run"]], "get_run_index() (prototrade.file_manager.file_manager.filemanager method)": [[5, "prototrade.file_manager.file_manager.FileManager.get_run_index"]], "prototrade.file_manager": [[5, "module-prototrade.file_manager"]], "prototrade.file_manager.file_manager": [[5, "module-prototrade.file_manager.file_manager"]], "dualheap (class in prototrade.models.dual_heap)": [[6, "prototrade.models.dual_heap.DualHeap"]], "errorevent (class in prototrade.models.error_event)": [[6, "prototrade.models.error_event.ErrorEvent"]], "halfquote (class in prototrade.models.books)": [[6, "prototrade.models.books.HalfQuote"]], "order (class in prototrade.models.order)": [[6, "prototrade.models.order.Order"]], "quote (class in prototrade.models.books)": [[6, "prototrade.models.books.Quote"]], "subscribe (prototrade.models.subscription_event.subscribetype attribute)": [[6, "prototrade.models.subscription_event.SubscribeType.SUBSCRIBE"]], "strategy (class in prototrade.models.strategy)": [[6, "prototrade.models.strategy.Strategy"]], "subscribetype (class in prototrade.models.subscription_event)": [[6, "prototrade.models.subscription_event.SubscribeType"]], "subscriptionevent (class in prototrade.models.subscription_event)": [[6, "prototrade.models.subscription_event.SubscriptionEvent"]], "transaction (class in prototrade.models.transaction)": [[6, "prototrade.models.transaction.Transaction"]], "unsubscribe (prototrade.models.subscription_event.subscribetype attribute)": [[6, "prototrade.models.subscription_event.SubscribeType.UNSUBSCRIBE"]], "ask (prototrade.models.books.quote property)": [[6, "prototrade.models.books.Quote.ask"]], "bid (prototrade.models.books.quote property)": [[6, "prototrade.models.books.Quote.bid"]], "price (prototrade.models.books.halfquote property)": [[6, "prototrade.models.books.HalfQuote.price"]], "prototrade.models": [[6, "module-prototrade.models"]], "prototrade.models.books": [[6, "module-prototrade.models.books"]], "prototrade.models.dual_heap": [[6, "module-prototrade.models.dual_heap"]], "prototrade.models.error_event": [[6, "module-prototrade.models.error_event"]], "prototrade.models.order": [[6, "module-prototrade.models.order"]], "prototrade.models.strategy": [[6, "module-prototrade.models.strategy"]], "prototrade.models.subscription_event": [[6, "module-prototrade.models.subscription_event"]], "prototrade.models.transaction": [[6, "module-prototrade.models.transaction"]], "side_str (prototrade.models.books.halfquote property)": [[6, "prototrade.models.books.HalfQuote.side_str"]], "timestamp (prototrade.models.books.quote property)": [[6, "prototrade.models.books.Quote.timestamp"]], "volume (prototrade.models.books.halfquote property)": [[6, "prototrade.models.books.HalfQuote.volume"]], "positionmanager (class in prototrade.position_management.position_manager)": [[7, "prototrade.position_management.position_manager.PositionManager"]], "testpuller (class in prototrade.position_management.test_puller)": [[7, "prototrade.position_management.test_puller.TestPuller"]], "cancel_order() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.cancel_order"]], "create_order() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.create_order"]], "execute_any_ask_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.execute_any_ask_orders"]], "execute_any_bid_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.execute_any_bid_orders"]], "get_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_orders"]], "get_pnl() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_pnl"]], "get_pnl_over_time() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_pnl_over_time"]], "get_positions() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_positions"]], "get_positions_over_time() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_positions_over_time"]], "get_realised_pnl() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_realised_pnl"]], "get_strategy_best_ask() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_strategy_best_ask"]], "get_strategy_best_bid() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_strategy_best_bid"]], "get_transactions() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_transactions"]], "hack_out() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.hack_out"]], "handle_error() (in module prototrade.position_management.position_manager)": [[7, "prototrade.position_management.position_manager.handle_error"]], "prototrade.position_management": [[7, "module-prototrade.position_management"]], "prototrade.position_management.position_manager": [[7, "module-prototrade.position_management.position_manager"]], "prototrade.position_management.test_puller": [[7, "module-prototrade.position_management.test_puller"]], "release_locks() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.release_locks"]], "test_pull() (prototrade.position_management.test_puller.testpuller method)": [[7, "prototrade.position_management.test_puller.TestPuller.test_pull"]], "main() (in module prototrade.test_strategies.test_strategy_1)": [[8, "prototrade.test_strategies.test_strategy_1.main"]], "prototrade.test_strategies": [[8, "module-prototrade.test_strategies"]], "prototrade.test_strategies.test_strategy_1": [[8, "module-prototrade.test_strategies.test_strategy_1"]], "test_strategy() (in module prototrade.test_strategies.test_strategy_1)": [[8, "prototrade.test_strategies.test_strategy_1.test_strategy"]], "alpacadatastreamer (class in prototrade.ticker_streamer.alpaca_streamer)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer"]], "priceupdater (class in prototrade.ticker_streamer.price_updater)": [[9, "prototrade.ticker_streamer.price_updater.PriceUpdater"]], "subscriptionmanager (class in prototrade.ticker_streamer.subscription_manager)": [[9, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager"]], "get_rest_api() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.get_rest_api"]], "is_market_open() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.is_market_open"]], "print_books_subscribed_to() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[9, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.print_books_subscribed_to"]], "prototrade.ticker_streamer": [[9, "module-prototrade.ticker_streamer"]], "prototrade.ticker_streamer.alpaca_streamer": [[9, "module-prototrade.ticker_streamer.alpaca_streamer"]], "prototrade.ticker_streamer.price_updater": [[9, "module-prototrade.ticker_streamer.price_updater"]], "prototrade.ticker_streamer.subscription_manager": [[9, "module-prototrade.ticker_streamer.subscription_manager"]], "stop() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.stop"]], "stop_queue_polling() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[9, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.stop_queue_polling"]], "subscribe() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.subscribe"]], "subscribe() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[9, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.subscribe"]], "unsubscribe() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[9, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.unsubscribe"]], "unsubscribe() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[9, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.unsubscribe"]], "update_price() (prototrade.ticker_streamer.price_updater.priceupdater method)": [[9, "prototrade.ticker_streamer.price_updater.PriceUpdater.update_price"]]}})