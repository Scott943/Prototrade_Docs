Search.setIndex({"docnames": ["index", "modules", "prototrade", "prototrade.exceptions", "prototrade.exchange", "prototrade.file_manager", "prototrade.models", "prototrade.position_management", "prototrade.ticker_streamer"], "filenames": ["index.rst", "modules.rst", "prototrade.rst", "prototrade.exceptions.rst", "prototrade.exchange.rst", "prototrade.file_manager.rst", "prototrade.models.rst", "prototrade.position_management.rst", "prototrade.ticker_streamer.rst"], "titles": ["Welcome to prototrade\u2019s documentation!", "prototrade", "prototrade package", "prototrade.exceptions package", "prototrade.exchange package", "prototrade.file_manager package", "prototrade.models package", "prototrade.position_management package", "prototrade.ticker_streamer package"], "terms": {"packag": [0, 1], "index": 0, "modul": [0, 1], "search": 0, "page": 0, "subpackag": 1, "except": [1, 2, 4], "submodul": [1, 2], "content": 1, "exchang": [1, 2], "model": [1, 2], "order": [1, 2, 4], "quot": [1, 2, 4, 8], "transact": [1, 2, 4], "virtual_exchang": 1, "virtualexchang": [1, 2], "register_strategi": [1, 2], "run_strategi": [1, 2], "exchangenotopenexcept": [2, 3], "extraneousparameterexcept": [2, 3], "invalidordersideexcept": [2, 3], "invalidordertypeexcept": [2, 3], "invalidpriceexcept": [2, 3], "invalidvolumeexcept": [2, 3], "missingparameterexcept": [2, 3], "subscriptionexcept": [2, 3, 4], "unavailablesymbolexcept": [2, 3], "unknownorderidexcept": [2, 3], "cancel_ord": [2, 4, 7], "create_ord": [2, 4, 7], "get_ord": [2, 4, 7], "get_pnl": [2, 4, 7], "get_pnl_over_tim": [2, 4, 7], "get_posit": [2, 4, 7], "get_positions_over_tim": [2, 4, 7], "get_strategy_best_ask": [2, 4, 7], "get_strategy_best_bid": [2, 4, 7], "get_subscribed_quot": [2, 4], "get_subscript": [2, 4], "get_transact": [2, 4, 7], "histor": [2, 4], "is_run": [2, 4], "subscrib": [2, 4, 8], "unsubscrib": [2, 4, 8], "order_id": [2, 4, 6, 7], "order_sid": [2, 4, 6, 7], "order_typ": [2, 4, 6, 7], "price": [2, 4, 6, 7], "symbol": [2, 4, 6, 7, 8], "volum": [2, 4, 6, 7], "halfquot": [2, 6], "ask": [2, 4, 6], "bid": [2, 4, 6], "timestamp": [2, 4, 6], "class": [2, 4, 5, 6, 7, 8], "streamer_nam": 2, "streamer_usernam": 2, "streamer_kei": 2, "exchange_nam": [2, 8], "iex": 2, "save_data_loc": [2, 4, 7], "none": [2, 4, 7], "base": [2, 3, 4, 5, 6, 7, 8], "object": [2, 4, 5, 6, 7, 8], "The": [2, 4, 6], "master": 2, "us": [2, 4], "initialis": 2, "run": [2, 4], "framework": [2, 4, 6], "handl": 2, "alloc": 2, "process": 2, "each": [2, 4], "regist": 2, "strategi": [2, 4], "rais": [2, 4], "If": [2, 4], "i": [2, 4, 6], "current": [2, 4], "close": 2, "thi": [2, 4], "error": 2, "strategy_func": 2, "arg": 2, "function": [2, 4], "execut": [2, 4, 6], "includ": 2, "ani": [2, 4], "argument": [2, 4], "should": [2, 4], "provid": 2, "number": [2, 4, 6], "permiss": 2, "n": 2, "b": 2, "when": [2, 4, 6], "ar": [2, 4], "start": [2, 4], "alwai": 2, "an": [2, 4, 6], "first": 2, "paramet": [2, 4], "enabl": 2, "interact": [2, 4], "A": [2, 4, 6], "pass": 2, "option": [2, 4], "begin": 2, "all": [2, 4], "order_books_dict": [4, 7, 8], "order_books_dict_semaphor": [4, 7, 8], "subscription_queu": [4, 8], "error_queu": [4, 7], "exchange_num": [4, 7], "stop_ev": [4, 7, 8], "shared_rest_api": 4, "To": 4, "user": 4, "call": 4, "allow": 4, "place": 4, "retriev": 4, "inform": 4, "posit": 4, "un": 4, "stock": [4, 6], "data": 4, "latest": 4, "volume_request": [4, 7], "remov": 4, "from": 4, "list": 4, "open": [4, 6], "int": 4, "id": [4, 6], "amount": 4, "cancel": 4, "partial": 4, "specifi": 4, "entir": 4, "default": 4, "submit": 4, "market": [4, 6], "limit": [4, 6], "repeatedli": 4, "check": 4, "whether": 4, "can": 4, "fok": [4, 6], "fill": 4, "Or": 4, "kill": 4, "onc": 4, "cannot": 4, "str": 4, "side": [4, 6], "book": [4, 6], "either": [4, 6], "type": [4, 6], "One": 4, "must": 4, "also": 4, "0": 4, "float": 4, "return": 4, "creat": 4, "retriv": 4, "onli": 4, "particular": [4, 6], "otherwis": 4, "dictionari": 4, "where": 4, "kei": 4, "valu": 4, "correspond": [4, 6], "dict": 4, "profit": 4, "And": 4, "loss": 4, "pnl": 4, "over": 4, "sever": 4, "time": 4, "interv": 4, "sinc": 4, "entri": 4, "indic": 4, "tupl": 4, "symbol_filt": [4, 7], "": 4, "held": 4, "here": 4, "neg": 4, "impli": 4, "short": 4, "being": 4, "lot": [4, 6], "everi": 4, "get": 4, "best": 4, "simpli": 4, "lowest": 4, "willing": 4, "sell": 4, "In": 4, "implement": 4, "read": 4, "top": 4, "heap": 4, "highest": 4, "pai": 4, "e": [4, 6], "g": [4, 6], "access": 4, "aapl": 4, "set": 4, "previou": 4, "made": [4, 6], "chronolog": 4, "properti": [4, 6], "rest": 4, "api": 4, "proxi": 4, "depend": 4, "sourc": 4, "alpaca": 4, "avail": 4, "exampl": 4, "usag": 4, "within": 4, "get_bar": 4, "pltr": 4, "1minut": 4, "2022": 4, "01": 4, "18": 4, "df": 4, "chang": 4, "given": [4, 6], "date": 4, "1": 4, "minut": 4, "granular": 4, "still": 4, "exit": 4, "encount": 4, "fals": 4, "main": 4, "while": 4, "loop": 4, "condit": 4, "wai": 4, "perform": 4, "clearup": 4, "oper": 4, "analysi": 4, "after": 4, "ha": [4, 6], "finish": 4, "boolean": 4, "repres": [4, 6], "bool": 4, "avaiabl": 4, "member": 4, "longer": 4, "thrown": 4, "filemanag": 5, "root_path": 5, "num_strategi": [5, 8], "create_directory_for_run": 5, "get_run_index": 5, "been": 6, "fufil": 6, "yet": 6, "integ": 6, "pertain": 6, "one": 6, "half": 6, "bid_volum": 6, "bid_pric": 6, "ask_volum": 6, "ask_pric": 6, "consist": 6, "two": 6, "well": 6, "receiv": 6, "occur": 6, "wa": 6, "positionmanag": 7, "subscribed_symbol": 7, "execute_any_ask_ord": 7, "ask_heap": 7, "live_best_bid_half_quot": 7, "execute_any_bid_ord": 7, "bid_heap": 7, "live_best_ask_half_quot": 7, "get_realised_pnl": 7, "hack_out": 7, "release_lock": 7, "handle_error": 7, "testpul": 7, "test_symbol": 7, "strategy_num": [7, 8], "alpacadatastream": 8, "api_kei": 8, "secret_kei": 8, "get_rest_api": 8, "is_market_open": 8, "stop": 8, "priceupdat": 8, "update_pric": 8, "subscriptionmanag": 8, "streamer": 8, "sentinel": 8, "print_books_subscribed_to": 8, "stop_queue_pol": 8}, "objects": {"": [[2, 0, 0, "-", "prototrade"]], "prototrade": [[3, 0, 0, "-", "exceptions"], [4, 0, 0, "-", "exchange"], [5, 0, 0, "-", "file_manager"], [6, 0, 0, "-", "models"], [7, 0, 0, "-", "position_management"], [8, 0, 0, "-", "ticker_streamer"], [2, 0, 0, "-", "virtual_exchange"]], "prototrade.exceptions": [[3, 0, 0, "-", "exceptions"]], "prototrade.exceptions.exceptions": [[3, 1, 1, "", "ExchangeNotOpenException"], [3, 1, 1, "", "ExtraneousParameterException"], [3, 1, 1, "", "InvalidOrderSideException"], [3, 1, 1, "", "InvalidOrderTypeException"], [3, 1, 1, "", "InvalidPriceException"], [3, 1, 1, "", "InvalidVolumeException"], [3, 1, 1, "", "MissingParameterException"], [3, 1, 1, "", "SubscriptionException"], [3, 1, 1, "", "UnavailableSymbolException"], [3, 1, 1, "", "UnknownOrderIdException"]], "prototrade.exchange": [[4, 0, 0, "-", "exchange"]], "prototrade.exchange.exchange": [[4, 2, 1, "", "Exchange"]], "prototrade.exchange.exchange.Exchange": [[4, 3, 1, "", "cancel_order"], [4, 3, 1, "", "create_order"], [4, 3, 1, "", "get_orders"], [4, 3, 1, "", "get_pnl"], [4, 3, 1, "", "get_pnl_over_time"], [4, 3, 1, "", "get_positions"], [4, 3, 1, "", "get_positions_over_time"], [4, 3, 1, "", "get_strategy_best_ask"], [4, 3, 1, "", "get_strategy_best_bid"], [4, 3, 1, "", "get_subscribed_quotes"], [4, 3, 1, "", "get_subscriptions"], [4, 3, 1, "", "get_transactions"], [4, 4, 1, "", "historical"], [4, 3, 1, "", "is_running"], [4, 3, 1, "", "subscribe"], [4, 3, 1, "", "unsubscribe"]], "prototrade.file_manager": [[5, 0, 0, "-", "file_manager"]], "prototrade.file_manager.file_manager": [[5, 2, 1, "", "FileManager"]], "prototrade.file_manager.file_manager.FileManager": [[5, 3, 1, "", "create_directory_for_run"], [5, 3, 1, "", "get_run_index"]], "prototrade.models": [[6, 0, 0, "-", "order"], [6, 0, 0, "-", "quotes"], [6, 0, 0, "-", "transaction"]], "prototrade.models.order": [[6, 2, 1, "", "Order"]], "prototrade.models.order.Order": [[6, 4, 1, "", "order_id"], [6, 4, 1, "", "order_side"], [6, 4, 1, "", "order_type"], [6, 4, 1, "", "price"], [6, 4, 1, "", "symbol"], [6, 4, 1, "", "volume"]], "prototrade.models.quotes": [[6, 2, 1, "", "HalfQuote"], [6, 2, 1, "", "Quote"]], "prototrade.models.quotes.HalfQuote": [[6, 4, 1, "", "order_side"], [6, 4, 1, "", "price"], [6, 4, 1, "", "volume"]], "prototrade.models.quotes.Quote": [[6, 4, 1, "", "ask"], [6, 4, 1, "", "bid"], [6, 4, 1, "", "timestamp"]], "prototrade.models.transaction": [[6, 2, 1, "", "Transaction"]], "prototrade.models.transaction.Transaction": [[6, 4, 1, "", "order_side"], [6, 4, 1, "", "order_type"], [6, 4, 1, "", "price"], [6, 4, 1, "", "symbol"], [6, 4, 1, "", "timestamp"], [6, 4, 1, "", "volume"]], "prototrade.position_management": [[7, 0, 0, "-", "position_manager"], [7, 0, 0, "-", "test_puller"]], "prototrade.position_management.position_manager": [[7, 2, 1, "", "PositionManager"], [7, 5, 1, "", "handle_error"]], "prototrade.position_management.position_manager.PositionManager": [[7, 3, 1, "", "cancel_order"], [7, 3, 1, "", "create_order"], [7, 3, 1, "", "execute_any_ask_orders"], [7, 3, 1, "", "execute_any_bid_orders"], [7, 3, 1, "", "get_orders"], [7, 3, 1, "", "get_pnl"], [7, 3, 1, "", "get_pnl_over_time"], [7, 3, 1, "", "get_positions"], [7, 3, 1, "", "get_positions_over_time"], [7, 3, 1, "", "get_realised_pnl"], [7, 3, 1, "", "get_strategy_best_ask"], [7, 3, 1, "", "get_strategy_best_bid"], [7, 3, 1, "", "get_transactions"], [7, 3, 1, "", "hack_out"], [7, 3, 1, "", "release_locks"]], "prototrade.position_management.test_puller": [[7, 2, 1, "", "TestPuller"]], "prototrade.position_management.test_puller.TestPuller": [[7, 3, 1, "", "test_pull"]], "prototrade.ticker_streamer": [[8, 0, 0, "-", "alpaca_streamer"], [8, 0, 0, "-", "price_updater"], [8, 0, 0, "-", "subscription_manager"]], "prototrade.ticker_streamer.alpaca_streamer": [[8, 2, 1, "", "AlpacaDataStreamer"]], "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer": [[8, 3, 1, "", "get_rest_api"], [8, 3, 1, "", "is_market_open"], [8, 3, 1, "", "stop"], [8, 3, 1, "", "subscribe"], [8, 3, 1, "", "unsubscribe"]], "prototrade.ticker_streamer.price_updater": [[8, 2, 1, "", "PriceUpdater"]], "prototrade.ticker_streamer.price_updater.PriceUpdater": [[8, 3, 1, "", "update_price"]], "prototrade.ticker_streamer.subscription_manager": [[8, 2, 1, "", "SubscriptionManager"]], "prototrade.ticker_streamer.subscription_manager.SubscriptionManager": [[8, 3, 1, "", "print_books_subscribed_to"], [8, 3, 1, "", "stop_queue_polling"], [8, 3, 1, "", "subscribe"], [8, 3, 1, "", "unsubscribe"]], "prototrade.virtual_exchange": [[2, 2, 1, "", "VirtualExchange"]], "prototrade.virtual_exchange.VirtualExchange": [[2, 3, 1, "", "register_strategy"], [2, 3, 1, "", "run_strategies"]]}, "objtypes": {"0": "py:module", "1": "py:exception", "2": "py:class", "3": "py:method", "4": "py:property", "5": "py:function"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "exception", "Python exception"], "2": ["py", "class", "Python class"], "3": ["py", "method", "Python method"], "4": ["py", "property", "Python property"], "5": ["py", "function", "Python function"]}, "titleterms": {"welcom": 0, "prototrad": [0, 1, 2, 3, 4, 5, 6, 7, 8], "": 0, "document": 0, "content": [0, 2, 3, 4, 5, 6, 7, 8], "indic": 0, "tabl": 0, "packag": [2, 3, 4, 5, 6, 7, 8], "subpackag": 2, "virtual_exchang": 2, "modul": [2, 3, 4, 5, 6, 7, 8], "except": 3, "submodul": [3, 4, 5, 6, 7, 8], "exchang": 4, "file_manag": 5, "model": 6, "order": 6, "quot": 6, "transact": 6, "position_manag": 7, "test_pul": 7, "ticker_stream": 8, "alpaca_stream": 8, "price_updat": 8, "subscription_manag": 8}, "envversion": {"sphinx.domains.c": 2, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 8, "sphinx.domains.index": 1, "sphinx.domains.javascript": 2, "sphinx.domains.math": 2, "sphinx.domains.python": 3, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx": 57}, "alltitles": {"Welcome to prototrade\u2019s documentation!": [[0, "welcome-to-prototrade-s-documentation"]], "Contents:": [[0, null]], "Indices and tables": [[0, "indices-and-tables"]], "prototrade": [[1, "prototrade"]], "prototrade package": [[2, "prototrade-package"]], "Subpackages": [[2, "subpackages"]], "prototrade.virtual_exchange module": [[2, "module-prototrade.virtual_exchange"]], "Module contents": [[2, "module-prototrade"], [3, "module-prototrade.exceptions"], [4, "module-prototrade.exchange"], [5, "module-prototrade.file_manager"], [6, "module-prototrade.models"], [7, "module-prototrade.position_management"], [8, "module-prototrade.ticker_streamer"]], "prototrade.exceptions package": [[3, "prototrade-exceptions-package"]], "Submodules": [[3, "submodules"], [4, "submodules"], [5, "submodules"], [6, "submodules"], [7, "submodules"], [8, "submodules"]], "prototrade.exceptions.exceptions module": [[3, "module-prototrade.exceptions.exceptions"]], "prototrade.exchange package": [[4, "prototrade-exchange-package"]], "prototrade.exchange.exchange module": [[4, "module-prototrade.exchange.exchange"]], "prototrade.file_manager package": [[5, "prototrade-file-manager-package"]], "prototrade.file_manager.file_manager module": [[5, "module-prototrade.file_manager.file_manager"]], "prototrade.models package": [[6, "prototrade-models-package"]], "prototrade.models.order module": [[6, "module-prototrade.models.order"]], "prototrade.models.quotes module": [[6, "module-prototrade.models.quotes"]], "prototrade.models.transaction module": [[6, "module-prototrade.models.transaction"]], "prototrade.position_management package": [[7, "prototrade-position-management-package"]], "prototrade.position_management.position_manager module": [[7, "module-prototrade.position_management.position_manager"]], "prototrade.position_management.test_puller module": [[7, "module-prototrade.position_management.test_puller"]], "prototrade.ticker_streamer package": [[8, "prototrade-ticker-streamer-package"]], "prototrade.ticker_streamer.alpaca_streamer module": [[8, "module-prototrade.ticker_streamer.alpaca_streamer"]], "prototrade.ticker_streamer.price_updater module": [[8, "module-prototrade.ticker_streamer.price_updater"]], "prototrade.ticker_streamer.subscription_manager module": [[8, "module-prototrade.ticker_streamer.subscription_manager"]]}, "indexentries": {"virtualexchange (class in prototrade.virtual_exchange)": [[2, "prototrade.virtual_exchange.VirtualExchange"]], "module": [[2, "module-prototrade"], [2, "module-prototrade.virtual_exchange"], [3, "module-prototrade.exceptions"], [3, "module-prototrade.exceptions.exceptions"], [4, "module-prototrade.exchange"], [4, "module-prototrade.exchange.exchange"], [5, "module-prototrade.file_manager"], [5, "module-prototrade.file_manager.file_manager"], [6, "module-prototrade.models"], [6, "module-prototrade.models.order"], [6, "module-prototrade.models.quotes"], [6, "module-prototrade.models.transaction"], [7, "module-prototrade.position_management"], [7, "module-prototrade.position_management.position_manager"], [7, "module-prototrade.position_management.test_puller"], [8, "module-prototrade.ticker_streamer"], [8, "module-prototrade.ticker_streamer.alpaca_streamer"], [8, "module-prototrade.ticker_streamer.price_updater"], [8, "module-prototrade.ticker_streamer.subscription_manager"]], "prototrade": [[2, "module-prototrade"]], "prototrade.virtual_exchange": [[2, "module-prototrade.virtual_exchange"]], "register_strategy() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.register_strategy"]], "run_strategies() (prototrade.virtual_exchange.virtualexchange method)": [[2, "prototrade.virtual_exchange.VirtualExchange.run_strategies"]], "exchangenotopenexception": [[3, "prototrade.exceptions.exceptions.ExchangeNotOpenException"]], "extraneousparameterexception": [[3, "prototrade.exceptions.exceptions.ExtraneousParameterException"]], "invalidordersideexception": [[3, "prototrade.exceptions.exceptions.InvalidOrderSideException"]], "invalidordertypeexception": [[3, "prototrade.exceptions.exceptions.InvalidOrderTypeException"]], "invalidpriceexception": [[3, "prototrade.exceptions.exceptions.InvalidPriceException"]], "invalidvolumeexception": [[3, "prototrade.exceptions.exceptions.InvalidVolumeException"]], "missingparameterexception": [[3, "prototrade.exceptions.exceptions.MissingParameterException"]], "subscriptionexception": [[3, "prototrade.exceptions.exceptions.SubscriptionException"]], "unavailablesymbolexception": [[3, "prototrade.exceptions.exceptions.UnavailableSymbolException"]], "unknownorderidexception": [[3, "prototrade.exceptions.exceptions.UnknownOrderIdException"]], "prototrade.exceptions": [[3, "module-prototrade.exceptions"]], "prototrade.exceptions.exceptions": [[3, "module-prototrade.exceptions.exceptions"]], "exchange (class in prototrade.exchange.exchange)": [[4, "prototrade.exchange.exchange.Exchange"]], "cancel_order() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.cancel_order"]], "create_order() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.create_order"]], "get_orders() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_orders"]], "get_pnl() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_pnl"]], "get_pnl_over_time() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_pnl_over_time"]], "get_positions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_positions"]], "get_positions_over_time() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_positions_over_time"]], "get_strategy_best_ask() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_strategy_best_ask"]], "get_strategy_best_bid() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_strategy_best_bid"]], "get_subscribed_quotes() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_subscribed_quotes"]], "get_subscriptions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_subscriptions"]], "get_transactions() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.get_transactions"]], "historical (prototrade.exchange.exchange.exchange property)": [[4, "prototrade.exchange.exchange.Exchange.historical"]], "is_running() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.is_running"]], "prototrade.exchange": [[4, "module-prototrade.exchange"]], "prototrade.exchange.exchange": [[4, "module-prototrade.exchange.exchange"]], "subscribe() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.subscribe"]], "unsubscribe() (prototrade.exchange.exchange.exchange method)": [[4, "prototrade.exchange.exchange.Exchange.unsubscribe"]], "filemanager (class in prototrade.file_manager.file_manager)": [[5, "prototrade.file_manager.file_manager.FileManager"]], "create_directory_for_run() (prototrade.file_manager.file_manager.filemanager method)": [[5, "prototrade.file_manager.file_manager.FileManager.create_directory_for_run"]], "get_run_index() (prototrade.file_manager.file_manager.filemanager method)": [[5, "prototrade.file_manager.file_manager.FileManager.get_run_index"]], "prototrade.file_manager": [[5, "module-prototrade.file_manager"]], "prototrade.file_manager.file_manager": [[5, "module-prototrade.file_manager.file_manager"]], "halfquote (class in prototrade.models.quotes)": [[6, "prototrade.models.quotes.HalfQuote"]], "order (class in prototrade.models.order)": [[6, "prototrade.models.order.Order"]], "quote (class in prototrade.models.quotes)": [[6, "prototrade.models.quotes.Quote"]], "transaction (class in prototrade.models.transaction)": [[6, "prototrade.models.transaction.Transaction"]], "ask (prototrade.models.quotes.quote property)": [[6, "prototrade.models.quotes.Quote.ask"]], "bid (prototrade.models.quotes.quote property)": [[6, "prototrade.models.quotes.Quote.bid"]], "order_id (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.order_id"]], "order_side (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.order_side"]], "order_side (prototrade.models.quotes.halfquote property)": [[6, "prototrade.models.quotes.HalfQuote.order_side"]], "order_side (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.order_side"]], "order_type (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.order_type"]], "order_type (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.order_type"]], "price (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.price"]], "price (prototrade.models.quotes.halfquote property)": [[6, "prototrade.models.quotes.HalfQuote.price"]], "price (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.price"]], "prototrade.models": [[6, "module-prototrade.models"]], "prototrade.models.order": [[6, "module-prototrade.models.order"]], "prototrade.models.quotes": [[6, "module-prototrade.models.quotes"]], "prototrade.models.transaction": [[6, "module-prototrade.models.transaction"]], "symbol (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.symbol"]], "symbol (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.symbol"]], "timestamp (prototrade.models.quotes.quote property)": [[6, "prototrade.models.quotes.Quote.timestamp"]], "timestamp (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.timestamp"]], "volume (prototrade.models.order.order property)": [[6, "prototrade.models.order.Order.volume"]], "volume (prototrade.models.quotes.halfquote property)": [[6, "prototrade.models.quotes.HalfQuote.volume"]], "volume (prototrade.models.transaction.transaction property)": [[6, "prototrade.models.transaction.Transaction.volume"]], "positionmanager (class in prototrade.position_management.position_manager)": [[7, "prototrade.position_management.position_manager.PositionManager"]], "testpuller (class in prototrade.position_management.test_puller)": [[7, "prototrade.position_management.test_puller.TestPuller"]], "cancel_order() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.cancel_order"]], "create_order() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.create_order"]], "execute_any_ask_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.execute_any_ask_orders"]], "execute_any_bid_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.execute_any_bid_orders"]], "get_orders() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_orders"]], "get_pnl() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_pnl"]], "get_pnl_over_time() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_pnl_over_time"]], "get_positions() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_positions"]], "get_positions_over_time() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_positions_over_time"]], "get_realised_pnl() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_realised_pnl"]], "get_strategy_best_ask() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_strategy_best_ask"]], "get_strategy_best_bid() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_strategy_best_bid"]], "get_transactions() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.get_transactions"]], "hack_out() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.hack_out"]], "handle_error() (in module prototrade.position_management.position_manager)": [[7, "prototrade.position_management.position_manager.handle_error"]], "prototrade.position_management": [[7, "module-prototrade.position_management"]], "prototrade.position_management.position_manager": [[7, "module-prototrade.position_management.position_manager"]], "prototrade.position_management.test_puller": [[7, "module-prototrade.position_management.test_puller"]], "release_locks() (prototrade.position_management.position_manager.positionmanager method)": [[7, "prototrade.position_management.position_manager.PositionManager.release_locks"]], "test_pull() (prototrade.position_management.test_puller.testpuller method)": [[7, "prototrade.position_management.test_puller.TestPuller.test_pull"]], "alpacadatastreamer (class in prototrade.ticker_streamer.alpaca_streamer)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer"]], "priceupdater (class in prototrade.ticker_streamer.price_updater)": [[8, "prototrade.ticker_streamer.price_updater.PriceUpdater"]], "subscriptionmanager (class in prototrade.ticker_streamer.subscription_manager)": [[8, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager"]], "get_rest_api() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.get_rest_api"]], "is_market_open() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.is_market_open"]], "print_books_subscribed_to() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[8, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.print_books_subscribed_to"]], "prototrade.ticker_streamer": [[8, "module-prototrade.ticker_streamer"]], "prototrade.ticker_streamer.alpaca_streamer": [[8, "module-prototrade.ticker_streamer.alpaca_streamer"]], "prototrade.ticker_streamer.price_updater": [[8, "module-prototrade.ticker_streamer.price_updater"]], "prototrade.ticker_streamer.subscription_manager": [[8, "module-prototrade.ticker_streamer.subscription_manager"]], "stop() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.stop"]], "stop_queue_polling() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[8, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.stop_queue_polling"]], "subscribe() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.subscribe"]], "subscribe() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[8, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.subscribe"]], "unsubscribe() (prototrade.ticker_streamer.alpaca_streamer.alpacadatastreamer method)": [[8, "prototrade.ticker_streamer.alpaca_streamer.AlpacaDataStreamer.unsubscribe"]], "unsubscribe() (prototrade.ticker_streamer.subscription_manager.subscriptionmanager method)": [[8, "prototrade.ticker_streamer.subscription_manager.SubscriptionManager.unsubscribe"]], "update_price() (prototrade.ticker_streamer.price_updater.priceupdater method)": [[8, "prototrade.ticker_streamer.price_updater.PriceUpdater.update_price"]]}})